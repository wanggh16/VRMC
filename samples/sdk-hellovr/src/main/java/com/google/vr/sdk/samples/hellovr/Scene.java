package com.google.vr.sdk.samples.hellovr;

public class Scene {
    public char[][][] scene = {
            {   //0层
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
            },
            {   //1层
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0},
                    {0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0},
                    {0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0},
                    {0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0},
                    {0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0},
                    {0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0},
                    {0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0},
                    {0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0},
                    {0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
            },
            {   //2层
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            },
            {   //3层
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            },
            {   //4层
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
                    {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            },
            {   //5层(空气层)
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

            },
            {   //6层(空气层)(去掉这两层的话人在最顶端可能出bug)
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

            },
    };
    
    Scene()
    {
        char[][][]scene=new char[HelloVrActivity.TOP_LIMIT-HelloVrActivity.BOTTOM_LIMIT][HelloVrActivity.EAST_LIMIT-HelloVrActivity.WEST_LIMIT][HelloVrActivity.NORTH_LIMIT-HelloVrActivity.SOUTH_LIMIT];
        for(int i=0;i<this.scene.length;i++)
            for(int j=0;j<this.scene[i].length;j++)
                for(int k=0;k<this.scene[i][j].length;k++)
                    scene[i][j][k]=this.scene[i][j][k];
        this.scene=scene;
    }

    enum Position{
        NORTH,SOUTH,WEST,EAST,UP,DOWN
    }

    public int get_id(int i,int j,int k){
        return scene[i][j][k];
    }

    //获取块(i,j,k)某个方向的相邻方块ID
    public int get_neighbor_block_id(int i,int j,int k,Position p){
        switch (p){
            case UP:
                return (i+1>=scene.length)?0:scene[i+1][j][k];
            case DOWN:
                return (i-1<0)?0:scene[i-1][j][k];
            case EAST:
                return (j-1<0)?0:scene[i][j-1][k];
            case WEST:
                return (j+1>=scene[0].length)?0:scene[i][j+1][k];
            case NORTH:
                return (k-1<0)?0:scene[i][j][k-1];
            case SOUTH:
                return (k+1>=scene[0][0].length)?0:scene[i][j][k+1];
        }
        return -1;
    }

    public int get_scene_height(){
        return scene.length;
    }

    public int get_scene_width_ns(){
        return scene[0].length;
    }

    public int get_scene_width_we(){
        return scene[0][0].length;
    }

    public class Point{
        double x,y,z;
        public Point(double x,double y,double z){
            this.x=x;this.y=y;this.z=z;
        }
    }
    //坐标变换，由场景数组的(i,j,k)变到渲染引擎的(x,y,z)
    public Point transform_array_to_render(int scene_i, int scene_j, int scene_k){
        return new Point(get_scene_width_ns()-scene_j-1,get_scene_width_we()-scene_k-1, scene_i);
    }

    public Point transform_render_to_array(double render_x, double render_y, double render_z){
        return new Point(render_z,get_scene_width_ns()-render_x-1, get_scene_width_we()-render_y-1);
    }

    //坐标变换，由sdk的(x,y,z)变到渲染引擎的(x,y,z)
    public Point transform_sdk_to_render(double x,double y,double z){
        return new Point(-z,-x,y);
    }
}
